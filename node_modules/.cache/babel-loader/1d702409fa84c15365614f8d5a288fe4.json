{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Wim von Benecke\\\\Documents\\\\programing\\\\scrimba\\\\scrimba-meme-generator\\\\src\\\\MemeGenerator.js\";\nimport React, { Component } from 'react';\n\nclass MemeGenerator extends Component {\n  constructor() {\n    super();\n    this.state = {\n      topText: \"\",\n      bottomText: \"\",\n      randomImg: \"http://i.imgflip.com/1bij.jpg\",\n      allMemeImgs: []\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(event) {\n    const _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  componentDidMount() {\n    fetch(\"https://api.imgflip.com/get_memes\").then(response => response.json()).then(response => {\n      const memes = response.data.memes;\n      console.log(memes);\n      this.setState({\n        allMemeImgs: memes\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      className: \"meme-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      value: this.state.topText,\n      name: \"topText\",\n      placeholder: \"topText\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      value: this.state.bottomText,\n      name: \"bottomText\",\n      placeholder: \"bottomText\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"Gen\"));\n  }\n\n}\n\nexport default MemeGenerator;\n/**\r\n * Create 2 input fields, one for the topText and one for the bottomText\r\n * Remember that these will be \"controlled forms\", so make sure to add\r\n * all the attributes you'll need for that to work\r\n */","map":{"version":3,"sources":["C:/Users/Wim von Benecke/Documents/programing/scrimba/scrimba-meme-generator/src/MemeGenerator.js"],"names":["React","Component","MemeGenerator","constructor","state","topText","bottomText","randomImg","allMemeImgs","handleChange","bind","event","target","name","value","setState","componentDidMount","fetch","then","response","json","memes","data","console","log","render"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;AAEA,MAAMC,aAAN,SAA4BD,SAA5B,CAAsC;AACrCE,EAAAA,WAAW,GAAG;AACb;AACA,SAAKC,KAAL,GAAa;AACZC,MAAAA,OAAO,EAAE,EADG;AAEZC,MAAAA,UAAU,EAAE,EAFA;AAGZC,MAAAA,SAAS,EAAE,+BAHC;AAIZC,MAAAA,WAAW,EAAE;AAJD,KAAb;AAMA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA;;AACDD,EAAAA,YAAY,CAACE,KAAD,EAAQ;AAAA,0BACGA,KAAK,CAACC,MADT;AAAA,UACZC,IADY,iBACZA,IADY;AAAA,UACNC,KADM,iBACNA,KADM;AAEjB,SAAKC,QAAL,CAAc;AACb,OAACF,IAAD,GAAQC;AADK,KAAd;AAGD;;AAEFE,EAAAA,iBAAiB,GAAG;AACnBC,IAAAA,KAAK,CAAC,mCAAD,CAAL,CACEC,IADF,CACOC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADnB,EAEEF,IAFF,CAEOC,QAAQ,IAAI;AAAA,YACVE,KADU,GACDF,QAAQ,CAACG,IADR,CACVD,KADU;AAEbE,MAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACH,WAAKN,QAAL,CAAc;AACZP,QAAAA,WAAW,EAAEa;AADD,OAAd;AAGF,KARD;AASD;;AACAI,EAAAA,MAAM,GAAG;AACR,WACG;AAAM,MAAA,SAAS,EAAC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AACA,MAAA,IAAI,EAAC,MADL;AAEA,MAAA,KAAK,EAAE,KAAKrB,KAAL,CAAWC,OAFlB;AAGA,MAAA,IAAI,EAAC,SAHL;AAIA,MAAA,WAAW,EAAC,SAJZ;AAKA,MAAA,QAAQ,EAAE,KAAKI,YALf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARA,EASA;AACI,MAAA,IAAI,EAAC,MADT;AAEI,MAAA,KAAK,EAAE,KAAKL,KAAL,CAAWE,UAFtB;AAGI,MAAA,IAAI,EAAC,YAHT;AAII,MAAA,WAAW,EAAC,YAJhB;AAKI,MAAA,QAAQ,EAAE,KAAKG,YALnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATA,EAgBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAhBJ,CADH;AAoBA;;AAlDoC;;AAqDtC,eAAeP,aAAf;AAEA","sourcesContent":["import React, {Component} from 'react';\r\n\r\nclass MemeGenerator extends Component {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.state = {\r\n\t\t\ttopText: \"\",\r\n\t\t\tbottomText: \"\",\r\n\t\t\trandomImg: \"http://i.imgflip.com/1bij.jpg\",\r\n\t\t\tallMemeImgs: []\r\n\t\t}\r\n\t\tthis.handleChange = this.handleChange.bind(this)\r\n\t}\r\n\thandleChange(event) {\r\n\t\tconst {name, value} = event.target\r\n    this.setState({ \r\n    \t[name]: value \r\n    })\r\n  }\r\n\t\r\n\tcomponentDidMount() {\r\n  fetch(\"https://api.imgflip.com/get_memes\")\r\n\t  .then(response => response.json())\r\n\t  .then(response => {\r\n\t  \tconst {memes} = response.data\r\n\t  \t\t  \tconsole.log(memes)\r\n\t    this.setState({\r\n\t      allMemeImgs: memes\r\n    })\r\n  })\r\n}\r\n\trender() {\r\n\t\treturn (\r\n\t    <form className=\"meme-form\">\r\n\t        <input \r\n\t        type=\"text\" \r\n\t        value={this.state.topText} \r\n\t        name=\"topText\" \r\n\t        placeholder=\"topText\" \r\n\t        onChange={this.handleChange} \r\n\t    />\r\n\t    <br />\r\n\t    <input \r\n\t        type=\"text\" \r\n\t        value={this.state.bottomText} \r\n\t        name=\"bottomText\" \r\n\t        placeholder=\"bottomText\" \r\n\t        onChange={this.handleChange} \r\n\t    />                 \r\n\t        <button>Gen</button>\r\n\t    </form>\r\n\t\t)\t\t\r\n\t}\r\n}\r\n\r\nexport default MemeGenerator;\r\n \r\n/**\r\n * Create 2 input fields, one for the topText and one for the bottomText\r\n * Remember that these will be \"controlled forms\", so make sure to add\r\n * all the attributes you'll need for that to work\r\n */\r\n                     "]},"metadata":{},"sourceType":"module"}